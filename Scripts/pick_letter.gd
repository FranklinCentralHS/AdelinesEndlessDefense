extends Control

var alphabet := "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
var current_indices := [0, 0, 0]
var selected_letter := 0  

@onready var labels := [$HBoxContainer/Letter1, $HBoxContainer/Letter2, $HBoxContainer/Letter3]

func _ready():
	print("Win scene loaded")
	update_labels()
	print("setting label color")
	labels[selected_letter].add_theme_color_override("font_color", Color.YELLOW)

func _input(event):
	if event.is_action_pressed("p1_left"):
		select_prev_letter()
	elif event.is_action_pressed("p1_right"):
		select_next_letter()
	elif event.is_action_pressed("p1_up"):
		scroll_letter(1)
	elif event.is_action_pressed("p1_down"):
		scroll_letter(-1)
	elif event.is_action_pressed("p1_start"):
		confirm_initials()

func select_prev_letter():
	labels[selected_letter].add_theme_color_override("font_color", Color.WHITE)
	selected_letter = (selected_letter - 1) % 3
	labels[selected_letter].add_theme_color_override("font_color", Color.YELLOW)

func select_next_letter():
	labels[selected_letter].add_theme_color_override("font_color", Color.WHITE)
	selected_letter = (selected_letter + 1) % 3
	labels[selected_letter].add_theme_color_override("font_color", Color.YELLOW)

func scroll_letter(dir):
	current_indices[selected_letter] = (current_indices[selected_letter] + dir) % alphabet.length()
	update_labels()

func update_labels():
	for i in range(3):
		labels[i].text = alphabet[current_indices[i]]

func confirm_initials():
	var initials = ""
	for i in current_indices:
		initials += alphabet[i]
	print("Initials entered: ", initials)
	
	if initials in forbidenWords:
		pass
	else:
		print(initials + "total_score")
		Leaderboard.add_score(initials, Global.score)
		self.queue_free()
		
	print("done")

var forbidenWords = [
	"ass",
	"fuc",
	"fuk",
	"fuq",
	"fux",
	"fck",
	"coc",
	"cok",
	"coq",
	"kox",
	"koc",
	"kok",
	"koq",	
	"cac",
	"cak",
	"caq",
	"kac",
	"kak",
	"kaq",	
	"dic",
	"dik",
	"diq",
	"dix",
	"dck",
	"pns",
	"psy",
	"fag",
	"fgt",
	"ngr",
	"nig",
	"cnt",
	"knt",
	"sht",
	"dsh",
	"twt",
	"bch",
	"cum",
	"clt",
	"kum",
	"klt",
	"suc",
	"suk",
	"suq",
	"sck",
	"lic",
	"lik",
	"liq",
	"lck",
	"jiz",
	"jzz",
	"gay",
	"gey",
	"gei",
	"gai",
	"vag",
	"vgn",
	"sjv",
	"fap",
	"prn",
	"lol",
	"jew",
	"joo",
	"gvr",
	"pus",
	"pis",
	"pss",
	"snm",
	"tit",
	"fku",
	"fcu",
	"fqu",
	"hor",
	"slt",
	"jap",
	"wop",
	"kik",
	"kyk",
	"kyc",
	"kyq",
	"dyk",
	"dyq",
	"dyc",
	"kkk",
	"jyz",
	"prk",
	"prc",
	"prq",
	"mic",
	"mik",
	"miq",
	"myc",
	"myk",
	"myq",
	"guc",
	"guk",
	"guq",
	"giz",
	"gzz",
	"sex",
	"sxx",
	"sxi",
	"sxe",
	"sxy",
	"xxx",
	"wac",
	"wak",
	"waq",
	"wck",
	"pot",
	"thc",
	"vaj",
	"vjn",
	"nut",
	"std",
	"lsd",
	"poo",
	"azn",
	"pcp",
	"dmn",
	"orl",
	"anl",
	"ans",
	"muf",
	"mff",
	"phk",
	"phc",
	"phq",
	"xtc",
	"tok",
	"toc",
	"toq",
	"mlf",
	"rac",
	"rak",
	"raq",
	"rck",
	"sac",
	"sak",
	"saq",
	"pms",
	"nad",
	"ndz",
	"nds",
	"wtf",
	"sol",
	"sob",
	"fob",
	"sfu",
	"ASS",
	"FUC",
	"FUK",
	"FUQ",
	"FUX",
	"FCK",
	"COC",
	"COK",
	"COQ",
	"KOX",
	"KOC",
	"KOK",
	"KOQ",	
	"CAC",
	"CAK",
	"CAQ",
	"KAC",
	"KAK",
	"KAQ",	
	"DIC",
	"DIK",
	"DIQ",
	"DIX",
	"DCK",
	"PNS",
	"PSY",
	"FAG",
	"FGT",
	"NGR",
	"NIG",
	"CNT",
	"KNT",
	"SHT",
	"DSH",
	"TWT",
	"BCH",
	"CUM",
	"CLT",
	"KUM",
	"KLT",
	"SUC",
	"SUK",
	"SUQ",
	"SCK",
	"LIC",
	"LIK",
	"LIQ",
	"LCK",
	"JIZ",
	"JZZ",
	"GAY",
	"GEY",
	"GEI",
	"GAI",
	"VAG",
	"VGN",
	"SJV",
	"FAP",
	"PRN",
	"LOL",
	"JEW",
	"JOO",
	"GVR",
	"PUS",
	"PIS",
	"PSS",
	"SNM",
	"TIT",
	"FKU",
	"FCU",
	"FQU",
	"HOR",
	"SLT",
	"JAP",
	"WOP",
	"KIK",
	"KYK",
	"KYC",
	"KYQ",
	"DYK",
	"DYQ",
	"DYC",
	"KKK",
	"JYZ",
	"PRK",
	"PRC",
	"PRQ",
	"MIC",
	"MIK",
	"MIQ",
	"MYC",
	"MYK",
	"MYQ",
	"GUC",
	"GUK",
	"GUQ",
	"GIZ",
	"GZZ",
	"SEX",
	"SXX",
	"SXI",
	"SXE",
	"SXY",
	"XXX",
	"WAC",
	"WAK",
	"WAQ",
	"WCK",
	"POT",
	"THC",
	"VAJ",
	"VJN",
	"NUT",
	"STD",
	"LSD",
	"POO",
	"AZN",
	"PCP",
	"DMN",
	"ORL",
	"ANL",
	"ANS",
	"MUF",
	"MFF",
	"PHK",
	"PHC",
	"PHQ",
	"XTC",
	"TOK",
	"TOC",
	"TOQ",
	"MLF",
	"RAC",
	"RAK",
	"RAQ",
	"RCK",
	"SAC",
	"SAK",
	"SAQ",
	"PMS",
	"NAD",
	"NDZ",
	"NDS",
	"WTF",
	"SOL",
	"SOB",
	"FOB",
	"SFU",

]
